<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	                    http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/context
	                    http://www.springframework.org/schema/context/spring-context.xsd
	                    http://www.springframework.org/schema/aop
	                    http://www.springframework.org/schema/aop/spring-aop.xsd">
	
	<!-- 	이 어플리케이션에서 사용될 모든 객체들의 명단을 적자 
			여기에 적어놓으면 스프링이 알아서 인스턴스를 생성하고 관리해줌 또한 
			필요한 곳에 주입 (injection)까지 해줌  -->
			
	<bean id="fripan" class="gui.cook.Fripan" />
	<bean id="electPan" class="gui.cook.ElectPan" />
	<bean id="cook" class="gui.cook.Cook"></bean>
	
	<!-- 회원가입에 필요한 컴포넌트 빈들 등록 -> NEW-->
	<bean id="id" class="javax.swing.JTextField">
		<!-- new JTextField(20) -> 생성자 주입 -->
		<constructor-arg type="int" value="20"/>
	</bean>
	
	<bean id="name" class="javax.swing.JTextField">
		<constructor-arg type="int" value="20"/>
	</bean>
	
	<bean id="email" class="javax.swing.JTextField">
		<constructor-arg type="int" value="20"/>
	</bean>
	
	<bean id="regist" class="javax.swing.JButton">
		<constructor-arg type="String" value="등록"/>
	</bean>
	
	<bean id="flow" class="java.awt.FlowLayout"/>
	
	<!-- joinForm이 필요로 하는 빈들을 주입시키기 (즉 엮기 weaving) -> 이 시점에서 new 함 -->
	<bean id="joinForm" class="gui.view.JoinForm">
		<!-- setter 주입 -->
		<property name="t_id" 			ref="id"/>
		<property name="t_name" 		ref="name"/>
		<property name="t_email" 		ref="email"/>
		<property name="bt_regist" 	ref="regist"/>
		<property name="flowLayout" 	ref="flow"/>
	</bean>
	
	<!-- 학생 등록 -->
	<bean id="schoolBell" class="gui.school.SchoolBell"/>
	<bean id="student" class="gui.school.Student"/>

	<!-- 
		AOP 적용하기 
		1) 공통 로직을 advisor로 둠 (빈으로 등록)
		2) 공통 로직을 어느 시점, 어느 지점에 동작시킬지 논리 작성
			-. 즉 관점을 등록함 
	-->
	<!-- aop 설정 -->
	<aop:config>
	
		<!-- aop:aspect : 어떤 공통 코드를 적용할지 그 객체의 레퍼런스 명시  -->
		<aop:aspect ref="schoolBell">
		
			<!-- 어떤 지점(메서드)에서 공통코드가 동작할지 서술 -->
			<aop:pointcut id="bellPointCut" expression="execution(public * gui.school.Student.*(..))"/>
			
			<!-- 어느 시점에 공통코드가 동작할지 -->
			<aop:before method="ring" pointcut-ref="bellPointCut"/>
		</aop:aspect>
	</aop:config>
	
</beans>
